---
- name: "Set gh git_protocol to SSH"
  command: "gh config set git_protocol ssh"
  changed_when: false

- name: Check if oh-my-zsh is installed
  stat:
    path: "{{ ansible_env.HOME }}/.oh-my-zsh"
  register: omz_dir
  failed_when: false
  changed_when: false

- block:
    - name: Downloading omz
      get_url:
        url: https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh
        dest: /tmp/omz-install.sh

    - name: execute omz install script
      script:
        cmd: /tmp/omz-install.sh --keep-zshrc
      become: false

    - name: Remove omz install script
      file: path=/tmp/omz-install.sh state=absent
  when: not omz_dir.stat.exists

- name: Set dotfiles dir
  set_fact:
    dotfiles_dir: '{{ ansible_env.HOME }}/projects/github.com/dotfiles'

- name: Set config dir
  set_fact:
    config_dir: '{{ ansible_env.HOME }}/.config'

#- name: Clone dotfiles repo
#  git:
#    repo: https://github.com/ynirk/dotfiles
#    dest: '{{ dotfiles_dir }}'

- name: Copy pinentry script
  copy:
    src: '{{ dotfiles_dir }}/bin/pinentry.sh'
    dest: '/usr/local/bin'
  become: yes

- name: Create local directory
  file:
    path: '{{ ansible_env.HOME }}/.gnupg'
    state: directory

- name: Install gpg configuration files
  copy:
    src: '{{ dotfiles_dir }}/gnupg/{{ item }}'
    dest: '{{ ansible_env.HOME }}/.gnupg'
  with_items:
    - gpg-agent.conf
    - gpg.conf

- name: Install ynirk pgp key
  shell: "curl https://keybase.io/ynirk/pgp_keys.asc | gpg --import"
  changed_when: false

- name: Install starship configuration
  copy:
    src: '{{ dotfiles_dir }}/starship/starship.toml'
    dest: '{{ config_dir }}'

- name: Install vscode extension
  shell: 'code --install-extension {{ item }}'
  with_items:
    - arcticicestudio.nord-visual-studio-code
    - golang.go
  changed_when: false
  ignore_errors: true

- name: Install vscode configuration
  copy:
    src: '{{ dotfiles_dir }}/vscode/settings.json'
    dest: '{{ ansible_env.HOME }}/Library/Application Support/Code/User/'

- name: Check if vim-plug is installed
  stat:
    path: '{{ config_dir }}/nvim/autoload'
  register: vim_plug_dir
  failed_when: false
  changed_when: false

- block:
    - name: Create local directory
      file:
        path: '{{ config_dir }}/nvim/autoload'
        state: directory

    - name: Downloading vim-plug
      get_url:
        url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        dest: '{{ config_dir }}/nvim/autoload/plug.vim'
        mode: '0750'
  when: not vim_plug_dir.stat.exists

- name: Install neovim configuration
  copy:
    src: '{{ dotfiles_dir }}/nvim/init.vim'
    dest: '{{ config_dir }}/nvim'

- name: Install shell configuration files
  copy:
    src: '{{ dotfiles_dir }}/shell/{{ item }}'
    dest: '{{ ansible_env.HOME }}'
  with_items:
    - .gitconfig
    - .inputrc
    - .functions
    - .zshrc
    - .zshenv

- name: Remap UK ±/§ key to US `~
  shell: "hidutil property --set '{\"UserKeyMapping\":[{\"HIDKeyboardModifierMappingSrc\":0x700000064,\"HIDKeyboardModifierMappingDst\":0x700000035}]}'"
  changed_when: false
